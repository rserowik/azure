{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "location - same as above"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the FortiGate virtual appliance."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the FortiGate virtual appliance."
      }
    },
    "FortiGateName": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiGate virtual appliance."
      }
    },
    "FortiGateImageSKU": {
      "type": "string",
      "defaultValue": "fortinet_fg-vm_payg",
      "allowedValues": [
        "fortinet_fg-vm",
        "fortinet_fg-vm_payg"
      ],
      "metadata": {
        "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Virtual Machine size selection"
      }
    },
    "publicIPNewOrExistingOrNone": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Identify whether to use a public IP and if so whether it is new or previously created"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address resource."
      }
    },
    "publicIPResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the public IP - or new resource group from above (if new public IP)"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address - A 'dynamic' address will change during reboot or periods of inactivity"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual network address space in CIDR notation, example: 10.2.0.0/16"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Prefix in CIDR notation (if using public IP, this will be the 'WAN' or external port), example: 10.2.1.0/24"
      }
    },
    "fortiGateIP1": {
      "type": "string",
      "metadata": {
        "description": "Static IP from subnet 1 for port1 of the FortiGate virtual appliance.  Remember Azure reserves the first 3 IPs in each subnet.  When using an exising vnet, verify that this address is not already assigned, example: 10.2.1.4"
      }
    },
    "Subnet2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Name"
      }
    },
    "Subnet2Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Prefix in CIDR notation (if using public IP, this will be the 'WAN' or external port), example: 10.2.2.0/24"
      }
    },
    "fortiGateIP2": {
      "type": "string",
      "metadata": {
        "description": "Static IP from subnet 2 for port1 of the FortiGate virtual appliance.  Remember Azure reserves the first 3 IPs in each subnet.  When using an exising vnet, verify that this address is not already assigned, example: 10.2.2.4"
      }
    },
    "FortinetTags": {
    "type": "object",
    "defaultValue": {
      "provider": "6EB3B02F-50E5-4A3E-8CB8-2E129258317D"
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/fortinetclouddev/FortigateAzureTemplate/5.3.7",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhds",
    "vmSize": "[parameters('instanceType')]",

    "VNetName": "[parameters('vnetName')]",
    "Subnet1Name": "[parameters('Subnet1Name')]",
    "Subnet2Name": "[parameters('Subnet2Name')]",
    "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet2Name'))]",

    "VNetAddressPrefix": "[parameters('vnetAddressPrefix')]",
    "Subnet1Prefix": "[parameters('Subnet1Prefix')]",
    "Subnet2Prefix": "[parameters('Subnet2Prefix')]",

    "routeTable1Name": "[concat(parameters('FortiGateName'), '-', parameters('Subnet1Name'),'-routes')]",
    "routeTable2Name": "[concat(parameters('FortiGateName'), '-', parameters('Subnet2Name'),'-routes')]",

    "FGDMZAddress": "[parameters('fortiGateIP2')]",
    "FGPubFacingAddress": "[parameters('fortiGateIP1')]",

    "apiVer": "2015-06-15",
    "compute_VM_fg1_Name": "[parameters('FortiGateName')]",

    "network_NIC_fg11_Name": "[concat(parameters('FortiGateName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg12_Name": "[concat(parameters('FortiGateName'),'Nic1')]",
    "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",

    "publicIPSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','publicip-',parameters('publicIPNewOrExistingOrNone'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','vnet-',parameters('vnetNewOrExisting'),'.json')]",

    "compute_AvailabilitySet_FG_Name": "[concat(parameters('FortiGateName'),'AvailSet')]",
    "compute_AvailabilitySet_FG_Id": "[resourceId('Microsoft.Compute/availabilitySets', variables('compute_AvailabilitySet_FG_Name'))]"
    
    "userData": "[concat('config system global \n set admin-port 1080 \n set admin-sport 10443 \n set admin-ssh-port 1022 \n set alias "FGT01" \n set gui-theme mariner \n set hostname "FGT01" \n set timezone 12 \n end \n config system interface \n edit "port1" \n set vdom "root" \n set mode dhcp \n set allowaccess ping https ssh fgfm \n set type physical \n set alias "Outside" \n set lldp-reception enable \n set role wan \n set snmp-index 1 \n next \n edit "port2" \n set vdom "root" \n set ip 10.255.255.10 255.255.255.0 \n set allowaccess ping \n set type physical \n set alias "Inside" \n set snmp-index 2 \n next \n edit "AZ-2-Cust" \n set vdom "root" \n set type tunnel \n set snmp-index 4 \n set interface "port1" \n next \n end \n config firewall address \n edit "SNET_FNAC01" \n set subnet 10.255.255.100 255.255.255.255 \n next \n edit "IP_FNAC01-eth0" \n set subnet 10.255.255.100 255.255.255.255 \n next \n edit "IP_FAZ01" \n set subnet 10.255.255.4 255.255.255.255 \n next \n edit "AZ-2-Cust_local_subnet_1" \n set allow-routing enable \n set subnet 10.255.255.0 255.255.255.0 \n next \n edit "AZ-2-Cust_remote_subnet_1" \n set allow-routing enable \n set subnet 10.0.0.0 255.0.0.0 \n next \n edit "AZ-2-Cust_remote_subnet_2" \n set allow-routing enable \n set subnet 172.16.0.0 255.240.0.0 \n next \n edit "AZ-2-Cust_remote_subnet_3" \n set allow-routing enable \n set subnet 192.168.0.0 255.255.255.0 \n next \n end \n config firewall addrgrp \n edit "AZ-2-Cust_local" \n set member "AZ-2-Cust_local_subnet_1" \n set allow-routing enable \n next \n edit "AZ-2-Cust_remote" \n set member "AZ-2-Cust_remote_subnet_1" "AZ-2-Cust_remote_subnet_2" "AZ-2-Cust_remote_subnet_3" \n set allow-routing enable \n next \n end \n config vpn ssl settings \n set port 1010 \n end \n config vpn ipsec phase1-interface \n edit "AZ-2-Cust" \n set type dynamic \n set interface "port1" \n set peertype any \n set net-device enable \n set proposal aes128-sha256 aes256-sha256 aes128-sha1 aes256-sha1 \n set dpd on-idle \n set wizard-type dialup-fortigate \n set psksecret ENC k9iX6Zr0TIoeAL1Sass3aHx92k7YIPiRAq6X1MjdGTmgUWiaW6pEoLqzML5GQb37tw5i+q/LCHlc9ZdRenSnbcQCo8F/XUodzy96yOyJu3DzESMXdJadoR+kZhwRGs34AYAEvgL0VfUnXyeEC4u/jRYzIcHv1nO+5N/ntdK6ViG0Vd5/MrYuurERAj9noxZJtBgvAQ== \n set dpd-retryinterval 60 \n next \n end \n config vpn ipsec phase2-interface \n edit "AZ-2-Cust" \n set phase1name "AZ-2-Cust" \n set proposal aes128-sha1 aes256-sha1 aes128-sha256 aes256-sha256 aes128gcm aes256gcm chacha20poly1305 \n set src-addr-type name \n set dst-addr-type name \n set src-name "all" \n set dst-name "AZ-2-Cust_remote" \n next \n end \n config firewall vip \n edit "VIP_WAN-2-FNAC01_TCP-8080" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.100" \n set extport 8080 \n set mappedport 8080 \n next \n edit "VIP_WAN-2-FNAC01_TCP-8443" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.100" \n set extport 8443 \n set mappedport 8443 \n next \n edit "VIP_WAN-2-FNAC01_TCP-22" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.100" \n set extport 822 \n set mappedport 22 \n next \n edit "VIP_WAN-2-FAZ01_TCP-22" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.110" \n set extport 922 \n set mappedport 22 \n next \n edit "VIP_WAN-2-FAZ01_TCP-80" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.110" \n set extport 980 \n set mappedport 80 \n next \n edit "VIP_WAN-2-FAZ01_TCP-443" \n set extip 10.255.254.10 \n set extintf "port1" \n set portforward enable \n set mappedip "10.255.255.110" \n set extport 9443 \n set mappedport 443 \n next \n end \n config firewall vipgrp \n edit "VIPG_WAN-2-FNAC01" \n set interface "port1" \n set member "VIP_WAN-2-FNAC01_TCP-22" "VIP_WAN-2-FNAC01_TCP-8080" "VIP_WAN-2-FNAC01_TCP-8443" \n next \n edit "VIPG_WAN-2-FAZ01" \n set interface "port1" \n set member "VIP_WAN-2-FAZ01_TCP-22" "VIP_WAN-2-FAZ01_TCP-443" "VIP_WAN-2-FAZ01_TCP-80" \n next \n end \n config firewall policy \n edit 1 \n set name "WAN-2-FNAC01" \n set srcintf "port1" \n set dstintf "port2" \n set srcaddr "all" \n set dstaddr "VIPG_WAN-2-FNAC01" \n set action accept \n set schedule "always" \n set service "ALL" \n set utm-status enable \n set fsso disable \n set ips-sensor "high_security" \n set ssl-ssh-profile "certificate-inspection" \n next \n edit 5 \n set name "WAN-2-FAZ01" \n set srcintf "port1" \n set dstintf "port2" \n set srcaddr "all" \n set dstaddr "VIPG_WAN-2-FAZ01" \n set action accept \n set schedule "always" \n set service "ALL" \n set utm-status enable \n set fsso disable \n set ips-sensor "high_security" \n set ssl-ssh-profile "certificate-inspection" \n next \n edit 4 \n set name "Inside-2-Outside" \n set srcintf "port2" \n set dstintf "port1" \n set srcaddr "all" \n set dstaddr "all" \n set action accept \n set schedule "always" \n set service "ALL" \n set utm-status enable \n set fsso disable \n set av-profile "default" \n set dnsfilter-profile "default" \n set ips-sensor "protect_client" \n set application-list "block-high-risk" \n set ssl-ssh-profile "certificate-inspection" \n set nat enable \n next \n edit 6 \n set name "vpn_AZ-2-Cust_local" \n set srcintf "port2" \n set dstintf "AZ-2-Cust" \n set srcaddr "AZ-2-Cust_local" \n set dstaddr "AZ-2-Cust_remote" \n set action accept \n set schedule "always" \n set service "ALL" \n next \n edit 7 \n set name "vpn_AZ-2-Cust_remote" \n set srcintf "AZ-2-Cust" \n set dstintf "port2" \n set srcaddr "AZ-2-Cust_remote" \n set dstaddr "AZ-2-Cust_local" \n set action accept \n set schedule "always" \n set service "ALL" \n next \n edit 8 \n set name "vpn_AZ-2-Cust_share_internet" \n set srcintf "AZ-2-Cust" \n set dstintf "port1" \n set srcaddr "AZ-2-Cust_remote" \n set dstaddr "all" \n set action accept \n set schedule "always" \n set service "ALL" \n set nat enable \n next \n end')]"

  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('compute_AvailabilitySet_FG_Name')]",
      "apiVersion": "2017-03-30",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2"
      },
      "sku": {
        "name":  "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable1Name')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to', '-', parameters('Subnet2Name'))]",
            "properties": {
              "addressPrefix": "[variables('Subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FGPubFacingAddress')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable2Name')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to', '-', parameters('Subnet1Name'))]",
            "properties": {
              "addressPrefix": "[variables('Subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FGDMZAddress')]"
            }
          },
          {
            "name": "to-Internet",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('FGDMZAddress')]"
            }
          }
        ]
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Network/routeTables/', variables('routeTable1Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable2Name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "OutsideSubnetName": {
            "value": "[parameters('Subnet1Name')]"
          },
          "subnet1AddressPrefix": {
            "value": "[parameters('Subnet1Prefix')]"
          },
          "DMZSubnetName": {
            "value": "[parameters('Subnet2Name')]"
          },
          "subnet2AddressPrefix": {
            "value": "[parameters('Subnet2Prefix')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "routeTable1Name": {
            "value": "[variables('routeTable1Name')]"
          },
          "routeTable2Name": {
            "value": "[variables('routeTable2Name')]"
          },
          "FortinetTags": {
            "value": "[parameters('FortinetTags')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "SettingUpPublicIPandFollowing",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicIPSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "[parameters('publicIPAddressType')]"
          },
          "publicIPAddressResourceGroup": {
            "value": "[parameters('publicIPResourceGroup')]"
          },
          "VMName": {
            "value": "[parameters('FortiGateName')]"
          },
          "VNetName": {
            "value": "[parameters('vnetName')]"
          },
          "FGPubFacingAddress": {
            "value": "[variables('FGPubFacingAddress')]"
          },
          "subnet1Ref": {
            "value": "[variables('subnet1Ref')]"
          },
          "network_NIC_fg11_Name": {
            "value": "[variables('network_NIC_fg11_Name')]"
          },
          "FortinetTags": {
            "value": "[parameters('FortinetTags')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg12_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FGDMZAddress')]",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('compute_VM_fg1_Name')]",
      "apiVersion": "2017-03-30",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('FortiGateImageSKU')]",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIPandFollowing')]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[variables('compute_VM_fg1_Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "[parameters('FortiGateImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg11_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg12_Id')]"
            }
          ]
        }
      }
    }
  ]
  }
